# =====  ANSIBLE  ============================================================
#          NAME:  site.yml
#   DESCRIPTION:  Entry point for playbook
# ============================================================================
---
- name: Deploy and install dotfiles
  vars:
    default_remote_username: "{{ lookup('env', 'LOGNAME') }}"
    ssh_key_list:
      - id_ed25519
      - id_rsa
  hosts: all
  become: true
  become_user: "{{ default_remote_username }}"

  pre_tasks:
    - name: "Check for local SSH key(s) - {{ item }}"
      delegate_to: localhost
      ansible.builtin.stat:
        path: "{{ lookup('env','HOME') + '/.ssh/id_{{ item }}') }}"
      register: ssh_key_exists
      with_items: "{{ ssh_key_list }}"

    - name: "Generate SSH key(s) - {{ item }}"
      delegate_to: localhost
      community.crypto.openssh_keypair:
        passphrase: "{{ default_ssh_passphrase }}"
        type: "{{ item }}"
        path: "{{ lookup('env', 'HOME') + '/.ssh/id_{{ item }}') }}"
      when: not ssh_key_exists.stat.exists
      with_items: "{{ ssh_key_list }}"

    - name: "Send authorized SSH key(s) - {{ item }}"
      delegate_to: localhost
      ansible.posix.authorized_key:
        user: "{{ default_remote_username }}"
        state: present
        key: "{{ lookup('file', lookup('env', 'HOME') + '/.ssh/id_{ item }}.pub') }}"
      with_items: "{{ ssh_key_list }}"

    - name: Pre-installation cleanup
      ansible.builtin.file:
        path: "{{ item }}"
        state: absent
      with_items:
        - "{{ global_installer_path }}"
        - "{{ global_checkout_path }}"

    - name: Create temporary directories
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory
        mode: '0700'
      with_items:
        - "{{ global_installer_path }}"
        - "{{ global_checkout_path }}"

  tasks:
    - name: Run common role
      ansible.builtin.include_role:
        name: common

    - name: Run custom role install_dotfiles
      ansible.builtin.include_role:
        name: install_dotfiles

  post_tasks:
    - name: Post-installation cleanup
      ansible.builtin.file:
        path: "{{ item }}"
        state: absent
      with_items:
        - "{{ global_checkout_path }}"
        - "{{ global_setup_path }}"
